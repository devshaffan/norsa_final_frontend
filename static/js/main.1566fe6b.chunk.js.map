{"version":3,"sources":["logo.svg","Components/ActionButtons.jsx","images/logo.png","address.js","Components/sidebar.jsx","Components/titleheading.jsx","Components/pagination.jsx","Components/table.jsx","Components/helpers.js","Components/ForeignData.jsx","Components/form.jsx","Components/Home.jsx","Components/client.jsx","Components/LandingPage.jsx","Components/Registration.jsx","Components/login.jsx","Components/EditClient.jsx","Components/Deviceadd.jsx","Components/DeviceEdit.jsx","Components/MerchantsAdd.jsx","Components/MerchantsEdit.jsx","Components/addNfcCard.jsx","Components/EditNfcCard.jsx","Components/AddIssuanceHistory.jsx","Components/EditIsuuanceHistory.jsx","Components/MerchantTypeAdd.jsx","Components/MerchantTypeEdit.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","ActionButtons","props","classes","className","to","url","Button","variant","color","size","onClick","dormint","delete","address","drawerWidth","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useState","menu","setMenu","useEffect","roll","window","localStorage","getItem","console","log","alert","title","logout","a","storage","token","removeItem","axios","get","headers","useTheme","React","open","CssBaseline","AppBar","position","clsx","Toolbar","Typography","noWrap","src","logo","Divider","List","style","paddingTop","map","value","icon","ListItem","button","ListItemIcon","ListItemText","DenseAppBar","heading","PaginationRounded","Pagination","onChange","event","pageNo","count","page","siblingCount","shape","StyledTableCell","withStyles","head","backgroundColor","palette","common","white","body","fontSize","TableCell","StyledTableRow","action","hover","height","TableRow","table","minWidth","CustomizedTables","response","dltRow","setDltRow","data","dataSet","refresh","setRefresh","setPageSize","check","setChecked","Client_id","useHistory","useParams","fetchMyAPI","useCallback","fetch","method","fetchUrl","json","Math","ceil","length","slice","NotificationManager","error","header","checkValue","useMediaQuery","breakpoints","down","val","Box","mb","Paper","elevation","id","deleteUrl","dltResponse","location","pathname","addButtonUrl","TableContainer","component","maxHeight","Table","stickyHeader","aria-label","TableHead","Checkbox","inputProps","clientHeader","TableBody","row","index","scope","e","target","checked","indexOf","clientColumns","push","splice","defaultChecked","div","issuanceHistoryUrl","align","editUrl","viewUrl","selectData","column","obj","label","client","getUrl","nfcCard","device","merchants","merchantstype","issuanceHistory","ForeignData","columns","formData","setFormData","history","view","col","FormControl","InputLabel","htmlFor","Input","aria-describedby","Form","dealerData","setDealerData","Code","FirstName","LastName","WorkNo","ContactNo","WorksAt","Email","FaxNumber","Status","MaxBorrowAmount","Dealer_id","addClient","preventDefault","JSON","stringify","message","success","then","Fragment","noValidate","name","placeholder","required","faxNumber","options","maxMenuHeight","FormControlLabel","control","checkedIcon","type","class","Home","showSidebar","createData","calories","fat","carbs","protein","LandingPage","layout","flexDirection","maxWidth","paper","up","marginTop","submit","form","buttonProgress","top","left","Register","email","password","submitting","gutterBottom","TextField","fullWidth","autoComplete","autoFocus","defaultValue","firstName","lastName","disabled","CircularProgress","LoginForm","accessToken","setItem","mt","readOnly","batteryStatus","status","nameNumber","deviceData","setDeviceData","Name","MerchantType_id","AccountNo","BankName","number","merchantData","setMerchantData","clientData","setClientData","PaybackPeriod","setPaybackPeriod","nfcCardData","setCardData","DateTime","Amount","TypeOfPayment","DateDeposit","NfcCard_id","Merchants_id","getPaybackPeriod","TypeOfReturnPayment","Title","addMerchantType","NumberOfMonths","Interest","discountForm","setDiscountForm","addDiscountForm","item","api","updateDiscountFormFields","newArray","App","dealerHeader","merchantType","payments","show","setShow","showSideBar","exact","path","AddIssuanceHistory","DeviceEdit","EditNfcCard","MerchantsAdd","MerchantTypeAdd","MerchantTypeEdit","MerchantsEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1566fe6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport RowSize from './PageSize';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst toggle=()=>{\r\n\r\n\r\n\r\n}\r\n\r\nexport default function ActionButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root+\" actionButtons\"}>\r\n    \r\n    <Link to={props.url} > <Button className=\"gridadd\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n     Add\r\n      </Button></Link>\r\n      <Link to='#'> <Button onClick={props.dormint}  className=\"active\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n      Active\r\n      </Button>\r\n      </Link>\r\n      <Link >\r\n      <Button  onClick={props.delete} className=\"gridDelete\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n      <Link >Delete</Link>\r\n      </Button> </Link>\r\n      {/* <RowSize/> */}\r\n      \r\n     \r\n     \r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.853127fa.png\";","\r\nconst address = \"http://localhost:3000\"\r\nexport default address;","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AssignmentReturnIcon from '@material-ui/icons/AssignmentReturn';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport StoreMallDirectoryIcon from '@material-ui/icons/StoreMallDirectory';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport { MdAndroid } from 'react-icons/md'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport { CameraRoll } from '@material-ui/icons';\r\nimport address from '../address'\r\n// import { ValueContainer } from 'react-select/src/components/containers';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const roll = window.localStorage.getItem(\"role\");\r\n    console.log(\"side bar roll\" + roll);\r\n    switch (roll) {\r\n      case \"0\":\r\n        alert(\"0 here bro\");\r\n        setMenu([\"Rebenbedor\", \"Menu-1\", \"Menu-2\"]);\r\n        break;\r\n      case \"1\":\r\n        // alert(\"1 here bro\");admin\r\n        setMenu([\r\n          { title: \"Kliente\", url: '/client' },\r\n          { title: \"Card Issuance\", url: \"/adddissuancehistory\" },\r\n          { title: \"Payments\", url: \"/payments\" },\r\n          { title: \"NFC Card\", url: \"/nfccard\" },\r\n          { title: \"Device\", url: \"/device\" },\r\n          { title: \"Merchants\", url: \"/merchants\" },\r\n          { title: \"Merchant Type\", url: \"/merchantType\" },\r\n          // { title: \"Transaction History\", url: \"#\" },\r\n        ]);\r\n        break;\r\n      case \"2\":\r\n        alert(\"2 here bro\");\r\n        setMenu([\" Negoshi\", \"Menu-1\", \"Menu-2\"]);\r\n        break;\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  const logout = async () => {\r\n\r\n\r\n    const storage = window.localStorage;\r\n    const token = storage.getItem('token');\r\n    console.log('token in sognout' + storage.getItem('token'));\r\n    if (storage.getItem('token')) {\r\n\r\n      storage.removeItem('token');\r\n    }\r\n    const response = await axios.get(address+'/api/auth/logout', {\r\n\r\n      headers: {\r\n\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n  }\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton)}\r\n        >\r\n          {/* <MenuIcon /> \r\n        </IconButton> */}\r\n\r\n          <Typography className=\"header\" variant=\"h6\" noWrap>\r\n            <img className=\"logo\" src={logo} />\r\n          </Typography>\r\n\r\n          <Link className=\"signout\" to='/login'> <Button onClick={logout} className=\"gridadd\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            Sign Out\r\n          </Button></Link>\r\n          {/* <Link className=\"signin\" to='#'> <Button className=\"gridadd\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          Sign In\r\n        </Button></Link> */}\r\n\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={open}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    > */}\r\n\r\n      <Divider />\r\n      <List style={{ paddingTop: \"100px\" }}>\r\n\r\n        {menu.map((value) => {\r\n          let icon = null\r\n          if (value.title == \"Device\") {\r\n            icon = <PhonelinkSetupIcon />\r\n          }\r\n          else if (value.title == \"Kliente\") {\r\n            icon = <GroupIcon />\r\n          }\r\n          else if (value.title == \"Merchant Type\") {\r\n            icon = < StorefrontIcon />\r\n          }\r\n          else if (value.title == \"Merchants\") {\r\n            icon = <StoreMallDirectoryIcon />\r\n          }\r\n          else if (value.title == \"NFC Card\") {\r\n            icon = <PaymentIcon />\r\n          }\r\n          else if (value.title == \"Card Issuance\") {\r\n            icon = <ScreenShareIcon />\r\n          }\r\n          else if (value.title == \"Payments\") {\r\n            icon = <AssignmentReturnIcon />\r\n          }\r\n          return (\r\n            <Link to={value.url}>  <ListItem button key='Client'>\r\n              <ListItemIcon>{icon}</ListItemIcon>\r\n              <ListItemText >{value.title} </ListItemText >\r\n            </ListItem>\r\n            </Link>\r\n          )\r\n        })}\r\n\r\n        {/* <Link to='/Client'>  <ListItem button key='Client'>\r\n            <ListItemIcon><GroupIcon /></ListItemIcon>\r\n            <ListItemText >Kliente </ListItemText >\r\n          </ListItem>\r\n          </Link>\r\n\r\n          <Link to='/Dealer'><ListItem button key='Dealer'>\r\n            <ListItemIcon><PersonIcon /></ListItemIcon>\r\n            <ListItemText >Rebenbedor  </ListItemText >\r\n          </ListItem>\r\n          </Link>\r\n          <Link to='/Merchant'>\r\n            <ListItem button key='Merchant'>\r\n              <ListItemIcon><StoreIcon /></ListItemIcon>\r\n              <ListItemText > Negoshi</ListItemText >\r\n            </ListItem>\r\n          </Link> */}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {/* <Link to='/login'>\r\n          <ListItem button key='Merchant'>\r\n            <ListItemIcon><StoreIcon /></ListItemIcon>\r\n            <ListItemText > Login</ListItemText >\r\n          </ListItem>\r\n        </Link>\r\n\r\n\r\n        <Link to='/logout'>\r\n          <ListItem button key='Merchant'>\r\n            <ListItemIcon><StoreIcon /></ListItemIcon>\r\n            <ListItemText > Sign Up</ListItemText >\r\n          </ListItem>\r\n        </Link> */}\r\n      </List>\r\n      {/* </Drawer> */}\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: true,\r\n        })}\r\n      >\r\n        {/* <div className={classes.drawerHeader} />\r\n        {/* <Typography paragraph>\r\n         Hello here\r\n        </Typography>\r\n        <Typography paragraph>\r\n        hello\r\n        </Typography> */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar({heading}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={`${classes.root} titlehead`}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n         {console.log(\"form\"+heading)}\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            {heading}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Select from 'react-select';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n           \r\n        },\r\n    },\r\n}));\r\n//you can use the component react paginate\r\nexport default function PaginationRounded(props) {\r\n    const changeRows = (event,pageNo) => {\r\n        // NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n\r\n    // alert(\"rows changed\" + pageNo);\r\n    //    console.log(event.target.querySelector('button'));\r\n    // console.log(event.target.firstChild)\r\n    //     if(!event.target.innerText){\r\n    //     var check = event.currentTarget.firstChild.firstChild.getAttribute(\"d\");\r\n    //     if (check.includes(\"M10\")) {\r\n    //         console.log(\"ri8 function here\");\r\n\r\n    //     }\r\n    //     else{\r\n\r\n    //    console.log(\"left function here bro\");\r\n\r\n    //     }\r\n    // }\r\n    //    console.log(event);\r\n    }\r\n    const classes = useStyles();\r\n\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={classes.root + \" pagination\"}>\r\n\r\n            <Pagination onChange={changeRows} count={props.page}  siblingCount={5} size=\"large\" variant=\"outlined\" shape=\"rounded\" />\r\n            {/* <Select options={options} /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport '../style/table.css';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ActionButtons from './ActionButtons';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport SideBar from '../Components/sidebar';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport ButtonAppBar from './titleheading';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport axios from 'axios';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paginations from './pagination';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport RowSize from './PageSize';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport address from '../address'\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: 'grey',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        height: 20\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const [dltRow, setDltRow] = useState([]);\r\n    const [rowsData, setrowsData] = useState([]);\r\n    const [data, dataSet] = useState([])\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [page, setPageSize] = useState(0);\r\n    const [check, setChecked] = useState(false);\r\n    const history = useHistory();\r\n    var row;\r\n    var response;\r\n    const dormint = () => {\r\n        dltRow.map((value) => {\r\n            console.log(\"values ---------->\" + value);\r\n        })\r\n\r\n        alert(\"active cjlicked over there\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleDelete = () => {\r\n        if (dltRow.length != 0) {\r\n            dltRow.map(async (id) => {\r\n                const storage = window.localStorage;\r\n                const token = storage.getItem('token');\r\n                console.log(\"in callback\" + token);\r\n                if (token) {\r\n                    console.log(props.data.deleteUrl + id);\r\n                    var dltResponse = await fetch(props.data.deleteUrl + id, {\r\n                        method: 'DELETE',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + token\r\n                        }\r\n                    });\r\n                    console.log(dltResponse);\r\n                }\r\n            })\r\n            console.log(\"delete called\" + window.location.pathname);\r\n            setDltRow([]);\r\n            // history.push(window.location.pathname);   \r\n            fetchMyAPI();\r\n            setRefresh(true);\r\n            // window.location.reload(true);\r\n        }\r\n        else {\r\n\r\n            //First select the Row to for delete operation\r\n            alert(\"empty list ther\");\r\n\r\n        }\r\n\r\n    }\r\n    let { Client_id } = useParams();\r\n    const fetchMyAPI = useCallback(async () => {\r\n        const storage = window.localStorage;\r\n        const token = storage.getItem('token');\r\n        console.log(\"in callback-------------\");\r\n        if (token) {\r\n\r\n            try {\r\n                if (Client_id) {\r\n                    response = await fetch(address+'/api/issuancehistory/getIssuancehistoryByClientId/' + Client_id, {\r\n\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + token\r\n                        }\r\n                    })\r\n                }\r\n                // else if(props.data.title == \"Merchants\"){\r\n\r\n                // }\r\n                else {\r\n                    console.log(\"tru=y block\");\r\n                    response = await fetch(props.data.fetchUrl, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': 'Bearer ' + token\r\n                        }\r\n                    });\r\n                }\r\n                // console.log(\"tru=y block\");\r\n                // response = await fetch(props.data.fetchUrl, {\r\n                //     method: 'GET',\r\n                //     headers: {\r\n                //         'Content-Type': 'application/json',\r\n                //         'Authorization': 'Bearer ' + token\r\n                //     }\r\n                // });\r\n                response = await response.json();\r\n                console.log(Math.ceil(response.length / 20));\r\n                setPageSize(Math.ceil(response.length / 20));\r\n                dataSet(response.slice(0, 30));\r\n                // if (Client_id) {\r\n                //     let temp = []\r\n                //     data.map(async (item, index) => {\r\n\r\n                //         response = await fetch(address+'/api/merchants/getMerchantTypeDiscountById/' + item.PaybackPeriod, {\r\n\r\n                //             method: 'GET',\r\n                //             headers: {\r\n                //                 'Content-Type': 'application/json',\r\n                //                 'Authorization': 'Bearer ' + token\r\n                //             }\r\n                //         })\r\n\r\n                //         response = await response.json()\r\n                //         temp.push(response)\r\n                //     })\r\n                //     let tempData = data.slice()\r\n                //     temp.map((item,index)=>{\r\n                        \r\n                //     })\r\n\r\n                // }\r\n            }\r\n            catch (err) {\r\n                NotificationManager.error('Token Expiry issue login again' + err, 'Error!', 5000, () => {\r\n                    // alert('Token Expired');\r\n                });\r\n                console.log(err);\r\n                // history.push(\"/login\");\r\n\r\n            }\r\n        }\r\n\r\n    }, [data])\r\n    useEffect(() => {\r\n\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"teodosii@react-notifications-component\",\r\n        //     type: \"success\",\r\n        //     insert: \"top\",\r\n        //     container: \"top-right\",\r\n        //     animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        //     animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        //     dismiss: {\r\n        //       duration: 5000,\r\n        //       onScreen: true\r\n        //     }\r\n        //   });\r\n\r\n\r\n        fetchMyAPI();\r\n\r\n\r\n    }, [refresh])\r\n\r\n\r\n\r\n    var header = props.header;\r\n    var rows = props.data;\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    var tableRows = data;\r\n\r\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const checkValue = (value) => {\r\n        var val = value;\r\n        if (typeof (value) == 'boolean') {\r\n\r\n            if (value) {\r\n                val = <CheckIcon />\r\n            }\r\n            else {\r\n                val = <ClearIcon />\r\n            }\r\n        }\r\n        console.log(\"value is------------------\" + val);\r\n        return val;\r\n    }\r\n    return (\r\n        <Box mb={8}>\r\n            <Paper elevation={4}>\r\n                <ReactNotification />\r\n                {console.table(props.data)}\r\n                {/* {/* {console.log(\"rowsadar\")} */}\r\n\r\n                <ButtonAppBar heading={props.data.title} />\r\n                { Client_id ? null : <ActionButtons delete={handleDelete} dormint={dormint} url={props.data.addButtonUrl} />}\r\n                <TableContainer component={Paper} style={{ maxHeight: 689 }}>\r\n                    <Table stickyHeader className={classes.table} aria-label=\"customized table\">\r\n                        <TableHead className='asad'>\r\n                            <TableRow  >\r\n                                <StyledTableCell ><Checkbox onChange={() => { setChecked(true); }} inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} /></StyledTableCell>\r\n                                {props.data.clientHeader.map((a) => {\r\n                                    return (<StyledTableCell >{a}</StyledTableCell>)\r\n                                })}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {data.map((row, index) => (\r\n                                <StyledTableRow key={index}>\r\n                                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                                        <Checkbox\r\n                                            onChange={(e) => {\r\n                                                // alert(\"checked\" + e.target.checked);\r\n                                                if (e.target.checked) {\r\n                                                    console.log(\"checked\");\r\n                                                    dltRow.indexOf(row[props.data.clientColumns[0]]) === -1 ? dltRow.push(row[props.data.clientColumns[0]]) : console.log(\"This item already exists\");\r\n                                                }\r\n                                                else {\r\n                                                    var index = dltRow.indexOf(row[props.data.clientColumns[0]]);\r\n                                                    if (index !== -1) {\r\n                                                        dltRow.splice(index, 1);\r\n                                                    }\r\n                                                    console.log(\"unchecked\");\r\n                                                }\r\n                                                console.log(dltRow);\r\n                                            }\r\n                                            }\r\n                                            defaultChecked={check}\r\n                                            inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\r\n                                    </StyledTableCell>\r\n                                    {props.data.clientColumns.map((value) => {\r\n                                        console.log(value + \"-----\" + typeof (row[value]));\r\n                                        let div = <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {checkValue(row[value])}\r\n                                        </StyledTableCell>\r\n                                        if (value == \"issuanceHistory\") {\r\n                                            div = <StyledTableCell component=\"th\" scope=\"row\">\r\n                                                <Link to={props.data.issuanceHistoryUrl + row['id']}>\r\n                                                    <Button className=\"edittable\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                                                        <UpdateIcon className=\"editIcon\" size=\"small\" />\r\n                                                    </Button></Link></StyledTableCell>\r\n                                        }\r\n                                        return (\r\n                                            div\r\n                                        )\r\n                                    })}\r\n                                    {/* <StyledTableCell component=\"th\" scope=\"row\">\r\n                                        {row[props.data.clientColumns[0]]}\r\n                                    </StyledTableCell>\r\n                                    {console.log(\"------------------------------------\")};\r\n                                    {console.log(\"--------asad\" + props.data.clientColumns[1].localeCompare(\"First Name\"))}\r\n                                    {props.data.clientColumns[1] == \"First Name\" && props.data.clientColumns[1] == \"Last Name\" && <StyledTableCell align=\"right\">{row[props.data.clientColumns[1]] + \" \" + row[props.data.clientColumns[2]]}</StyledTableCell>}\r\n                                    <StyledTableCell align=\"right\">{row['id']}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">{row[props.data.clientColumns[3]]}</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">{row[props.data.clientColumns[5]]}</StyledTableCell> */}\r\n\r\n                                    <StyledTableCell align=\"right\">\r\n                                        <Link to={props.data.editUrl + row['id']}> <Button className=\"edittable\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                                            <EditIcon className=\"editIcon\" size=\"small\" />\r\n                                        </Button></Link>\r\n                                        <Link to={props.data.viewUrl + row['id']}> <Button className=\"edittable\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                                            <VisibilityIcon />\r\n                                        </Button></Link>\r\n                                    </StyledTableCell>\r\n\r\n\r\n                                </StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Paginations page={page} />\r\n            </Paper>\r\n            <NotificationContainer />\r\n        </Box>\r\n\r\n    );\r\n}\r\n","// import { RATE_DURATIONS } from \"./constants\";\r\nimport address from \"../address\";\r\nexport const formatRate = (pricings = []) => {\r\n  // let minRate = 0;\r\n  let price = 0;\r\n  \r\n  // let duration = \"\";\r\n\r\n  // find min rate\r\n  // pricings.forEach(item => {\r\n  //   const rate =\r\n  //     parseInt(item.gross_price) / parseInt(RATE_DURATIONS[item.duration]);\r\n\r\n  //   if (minRate === 0 || rate < minRate) {\r\n  //     minRate = rate;\r\n  //     price = item.gross_price;\r\n  //     duration = item.duration;\r\n  //   }\r\n  // });\r\n  // if (!duration) return null;\r\n  // return `$${price}/${\r\n  //   RATE_DURATIONS[duration] === 60 ? \"hour\" : `${RATE_DURATIONS[duration]}min`\r\n  // }`;\r\n\r\n  // find lowest rate\r\n  if (pricings.length) {\r\n    price = pricings.reduce(\r\n      (min, p) => (p.gross_price < min ? p.gross_price : min),\r\n      pricings[0].gross_price\r\n    );\r\n  }\r\n\r\n  return `$${price}`;\r\n};\r\n\r\nexport const getAuth = () => {\r\n  const auth = localStorage.getItem(\"auth\");\r\n  return typeof auth === \"string\" ? JSON.parse(auth) : {};\r\n};\r\n\r\nexport const setAuth = (dataAuth) => {\r\n  localStorage.setItem(\"auth\", JSON.stringify(dataAuth));\r\n};\r\n\r\nexport const checkRolesAccepted = (auth, rolesAccepted) => {\r\n  return (\r\n    rolesAccepted.length &&\r\n    auth.user_roles &&\r\n    auth.user_roles.some((role) => rolesAccepted.includes(role))\r\n  );\r\n};\r\n\r\nexport const formatPhoneNumber = (entry = \"\") => {\r\n  if (!entry) {\r\n    return \"\";\r\n  }\r\n  const entryReplace = entry\r\n    .replace(/\\D/g, \"\")\r\n    .replace(/^1/, \"\")\r\n    .match(/([^\\d]*\\d[^\\d]*){1,10}$/);\r\n  if (!entryReplace) {\r\n    return \"\";\r\n  }\r\n  const match = entryReplace[0];\r\n  const part1 = match.length > 2 ? `(${match.substring(0, 3)})` : match;\r\n  const part2 = match.length > 3 ? ` ${match.substring(3, 6)}` : \"\";\r\n  const part3 = match.length > 6 ? ` ${match.substring(6, 10)}` : \"\";\r\n  return `${part1}${part2}${part3}`;\r\n};\r\nexport const getPhoneNumberOnlyDigits = (phone = \"\") => {\r\n  return phone.replace(/\\)/g, \"\").replace(/\\(/g, \"\").replace(/\\s/g, \"\");\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n  const regex = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/;\r\n  return regex.test(password);\r\n};\r\n\r\nexport const formatTime1 = (time = \"\") => {\r\n  if (!time) return \"\";\r\n  const hour = time.slice(0, 2);\r\n  const formatHour = parseInt(hour);\r\n  const minute = time.slice(3, 5);\r\n  if (formatHour > 12) {\r\n    return `${formatHour - 12}:${minute}`;\r\n  } else {\r\n    return `${time} `;\r\n  }\r\n};\r\n\r\nexport const formatTime2 = (time = \"\") => {\r\n  if (!time) return \"\";\r\n  const hour = time.slice(0, 2);\r\n  const formatHour = parseInt(hour);\r\n  const minute = time.slice(3, 5);\r\n  if (formatHour > 12) {\r\n    return `${formatHour - 12}:${minute}pm`;\r\n  } else if (formatHour === 12) {\r\n    return `${formatHour}:${minute}pm`;\r\n  } else {\r\n    return `${time}am`;\r\n  }\r\n};\r\n\r\nexport const convertTimeToNumber = (time = \"\") => {\r\n  if (!time) return 0;\r\n  const newTime = time.replace(\":\", \"\");\r\n  return parseInt(newTime);\r\n};\r\n\r\nexport const getParam = (name) => {\r\n  if (!name) return \"\";\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  return urlParams.get(name);\r\n};\r\n\r\nexport const roundCurrentTime = () => {\r\n  const currentTime = new Date();\r\n  const minute = currentTime.getMinutes();\r\n  const roundMinute = (Math.ceil((minute * 2) / 10) * 10) / 2;\r\n  return currentTime.setMinutes(roundMinute);\r\n};\r\n\r\nexport const formatExp = (month = \"\", year = \"\") => {\r\n  const formatYear = year.toString().slice(2, 5);\r\n  if (parseInt(month) < 10) {\r\n    return `0${month}/${formatYear}`;\r\n  } else return `${month}/${formatYear}`;\r\n};\r\n\r\nexport  const selectData=async (url,column,id)=>{\r\n  const storage = window.localStorage;\r\n  const token = storage.getItem('token');\r\n  var data=[];\r\n var response = await fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + token\r\n    },\r\n\r\n\r\n\r\n  });\r\n\r\n  response = await response.json();\r\n  console.log(\"selected data--------------------\");\r\n  console.log(response);\r\n  response.map((value)=>{\r\n   var obj={label:\"\",value:\"\"}\r\n   obj.label=value[column];\r\n   obj.value=value[\"id\"];\r\n   data.push(obj);\r\n\r\n\r\n  })\r\n\r\n  return data;\r\n\r\n}\r\n\r\n\r\nexport   const data = {\r\n\r\n  client: {\r\n    deleteUrl: address+'/api/clients/deleteClient/',\r\n    fetchUrl: address+'/api/clients/getAllClients',\r\n    getUrl:address+\"/api/clients/getClientById/\",\r\n    title: 'Kliente',\r\n    clientHeader: ['Code', 'FirstName', 'LastName', 'Email', 'ContactNo', 'WorksAt', 'FaxNumber', 'MaxBorrowAmount',,'Status','Actions'],\r\n    clientColumns: ['Code', 'FirstName', 'LastName', 'Email', 'ContactNo', 'WorksAt', 'FaxNumber', 'MaxBorrowAmount','Status'],\r\n    editUrl: \"/editclient/\",\r\n    viewUrl: \"/viewclient/\",\r\n    addButtonUrl: '/addclient',\r\n    url:'/client'\r\n  },\r\n  nfcCard: {\r\n    deleteUrl: address+'/api/nfcCard/deleteNfcCard/',\r\n    fetchUrl: address+'/api/nfcCard/getAllNfcCards',\r\n    getUrl:address+\"/api/nfcCard/getNfcCardById/\",\r\n    title: 'NfC Cards',\r\n    clientHeader: ['Id', 'Nomber', 'Status', 'Actions'],\r\n    clientColumns: ['id','number','status'],\r\n    editUrl: \"/editnfccard/\",\r\n    viewUrl: \"/viewnfccard/\",\r\n    addButtonUrl: '/addnfccard',\r\n    url:'/nfccard'\r\n  },\r\n  device: {\r\n    deleteUrl: address+'/api/device/deleteDevice/',\r\n    fetchUrl: address+'/api/device/getAllDevices',\r\n    title: 'Device',\r\n    clientHeader: ['Id', 'nameNumber', 'batteryStatus','Status', 'Actions'],\r\n    clientColumns: ['id','nameNumber','batteryStatus','status'],\r\n    editUrl: \"/editdevice/\",\r\n    viewUrl: \"/viewdevice/\",\r\n    addButtonUrl: '/adddevice',\r\n    url:'/device'\r\n  },\r\n  merchants: {\r\n    deleteUrl: address+'/api/merchants/deleteMerchant/',\r\n    fetchUrl: address+'/api/merchants/getAllMerchants',\r\n    getUrl:address+'/api/merchants/getMerchantById/',\r\n    title: 'Merchants',\r\n    clientHeader: ['Id', 'Code', 'Name','MerchantType_id','AccountNo','BankName', 'Actions'],\r\n    clientColumns: ['id','Code','Name','MerchantType_id','AccountNo','BankName'],\r\n    editUrl: \"/editmerchants/\",\r\n    viewUrl: \"/viewmerchants/\",\r\n    addButtonUrl: '/addmerchants',\r\n    url:\"/merchants\"\r\n  },\r\n  merchantstype: {\r\n    deleteUrl: address+'/api/merchants/deleteMerchantType/',\r\n    fetchUrl: address+'/api/merchants/getAllMerchantTypes',\r\n    getUrl:address+'/api/merchants/getMerchantTypeById/',\r\n    title: 'Merchant Type',\r\n    clientHeader: ['Id', 'Title', 'Actions'],\r\n    clientColumns: ['id','Title'],\r\n    editUrl: \"/editmerchants/\",\r\n    viewUrl: \"/viewmerchants/\",\r\n    addButtonUrl: '/addmerchants',\r\n    url:\"/merchants\"\r\n  },\r\n  issuanceHistory: {\r\n    deleteUrl: address+'/api/issuancehistory/deleteIssuancehistory/',\r\n    fetchUrl: address+'/api/issuancehistory/getAllIssuancehistories',\r\n    title: 'Issuance History',\r\n    clientHeader: ['Id', 'Date Time', 'Amount','Payment Period','Type Of Payment','Date Deposit', 'Client_Id','Nfc Card','Merchants_id','Actions'],\r\n    clientColumns: ['id','DateTime','Amount','PaybackPeriod','TypeOfReturnPayment','DateDeposit','Client_id','NfcCard_id','Merchants_id'],\r\n    editUrl: \"/editissuancehistory/\",\r\n    viewUrl: \"/viewissuancehistory/\",\r\n    addButtonUrl: '/adddissuancehistory',\r\n    url:'/issuancehistory'\r\n  }\r\n\r\n\r\n\r\n};\r\n","import React,{useState} from 'react'\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function ForeignData(props){\r\n\r\n\r\n    var data=props.data[props.title];\r\n    var columns=data[\"clientColumns\"];\r\n    const [formData, setFormData] = useState({})\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n  \r\n\r\n\r\n    useEffect(async () => {\r\n        console.log(\"---------------------------------------------------------abc-----------\");\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            console.log(\"in null\");\r\n            history.push('/login');\r\n\r\n        }\r\n        else {\r\n\r\n            // formId=props.match.params.id;\r\n            console.log(\"--------------------------------------------------------\");\r\n            console.log(\"in data\"+props.data[props.title][\"getUrl\"]+\"-----\"+props.title);\r\n            console.log(props.data[props.title]);\r\n\r\n            response = await fetch(props.data[props.title][\"getUrl\"]+ props.id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n\r\n\r\n            })\r\n            console.log(\"in fetch---------------------------------------------------------\");\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\" + id + props.view);\r\n            console.log(response);\r\n        }\r\n\r\n\r\n\r\n    }, [props.id]);\r\n\r\nreturn(\r\n\r\n\r\n <div  className=\"foreignData\" component={Paper}>\r\n    {/* {console.log(\"your data is-----------------------------------------------------\"+props.id)}\r\n    {console.log(formData)} */}\r\n\r\n\r\n<ButtonAppBar heading={props.heading} />\r\n\r\n{columns.map((col,index)=>{\r\n\r\nreturn(\r\n \r\n//     <FormControl>\r\n//                         <InputLabel htmlFor={\"\"+col}>{col}</InputLabel>\r\n//                         <Input id={col} name={col} readOnly=\"true\"   value={formData[col]}   />\r\n                    \r\n//  </FormControl> \r\n <FormControl>\r\n <InputLabel  htmlFor={\"my-input\"+index}>{col}</InputLabel>\r\n <Input id={\"my-input\"+index} aria-describedby=\"my-helper-text\" value={formData[col] || \"\"} />\r\n \r\n</FormControl>\r\n\r\n\r\n)\r\nconsole.log(col);\r\n\r\n\r\n})}\r\n\r\n\r\n\r\n \r\n\r\n\r\n \r\n</div>\r\n\r\n\r\n)\r\n\r\n\r\n\r\n}","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport { selectData } from './helpers';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { data } from './helpers';\r\nimport ForeignData from './ForeignData';\r\nimport address from \"../address\";\r\n\r\n\r\nlet count = 0;\r\nvar selectBoxData;\r\n\r\nfunction Form(props) {\r\n  count++;\r\n  const options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' }\r\n  ]\r\n  const [boxData, setData] = useState(\"\");\r\n  const [dealerData, setDealerData] = useState();\r\n  const [formData, setFormData] = useState({\r\n    Code: \"\", FirstName: \"\", LastName: \"\", WorkNo: \"\",\r\n    ContactNo: \"\", WorksAt: \"\",\r\n    Email: \"\", FaxNumber: \"\",\r\n    Status: \"\",\r\n    MaxBorrowAmount: \"\", Dealer_id: \"\"\r\n\r\n\r\n\r\n\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  var response;\r\n  var token;\r\n\r\n  const addClient = async (event) => {\r\n    event.preventDefault();\r\n    const storage = window.localStorage;\r\n    token = storage.getItem(\"token\");\r\n    console.log(formData);\r\n    if (token) {\r\n      response = await fetch(address+'/api/clients/getClientById/' + formData.Code, {\r\n\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        }\r\n\r\n\r\n      })\r\n\r\n      response = await response.json();\r\n      if(response){\r\n        alert(\"Client already exist\")\r\n        return;\r\n      }\r\n      response = await fetch(address+'/api/clients/upsertClient', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n\r\n        body: JSON.stringify(formData)\r\n\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(\"token\");\r\n      if (response.message) {\r\n        alert(response.message)\r\n      }\r\n      else {\r\n        NotificationManager.success('Success message', 'Title here');\r\n      }\r\n      history.push(props.url);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    // store.addNotification({\r\n    //   title: \"Wonderful!\",\r\n    //   message: \"Form Submitted Successfully\",\r\n    //   type: \"info\",\r\n    //   container: \"top-right\",\r\n    //   dismiss: {\r\n    //     duration: 5000,\r\n\r\n    //   }\r\n    // });\r\n\r\n\r\n    const storage = window.localStorage;\r\n    token = storage.getItem(\"token\");\r\n\r\n\r\n\r\n    if (!token) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n\r\n    }\r\n    else {\r\n\r\n      selectData(address+'/api/clients/getAllClients', 'Code', 'id').then((data) => { setDealerData(data) });\r\n\r\n\r\n      // // formId=props.match.params.id;\r\n      // response = await fetch('http://localhost:3000/api/clients/getClientById/' + id, {\r\n\r\n      //   method: 'GET',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //     'Authorization': 'Bearer ' + token\r\n      //   }\r\n\r\n\r\n      // })\r\n\r\n      // response=await response.json();\r\n      // setFormData(response);\r\n\r\n      // console.log(response);\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  // const { form, use } = useForm({\r\n  //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n  //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n  // // });\r\n  // const errors = use(\"errors\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactNotification />\r\n      <div className=\"form\">\r\n\r\n        <ButtonAppBar heading={props.heading} />\r\n        <form className=\"addForm\" noValidate>\r\n\r\n\r\n\r\n          <div>\r\n            <input name=\"Code\" value={formData && formData['Code']} placeholder=\"Skelta Code\" onChange={e => setFormData({ ...formData, Code: e.target.value, id: e.target.value })} required />\r\n\r\n\r\n\r\n          </div>\r\n          <div>\r\n            <input name=\"FirstName\" value={formData && formData.FirstName} placeholder=\"First Nomber\" onChange={e => setFormData({ ...formData, FirstName: e.target.value })} required />\r\n\r\n          </div>\r\n          <div>\r\n            <input name=\"LastName\" value={formData && formData.LastName} placeholder=\"Last Nomber\" onChange={e => setFormData({ ...formData, LastName: e.target.value })} required />\r\n\r\n          </div>\r\n          {/* <div>\r\n            <input name=\"Date\" placeholder=\"Date\" required />\r\n\r\n          </div> */}\r\n\r\n          <div>\r\n            <input name=\"WorkNo\" value={formData && formData.WorkNo} placeholder=\"Tel Trabou\" onChange={e => setFormData({ ...formData, WorkNo: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <input name=\"ContactNo\" value={formData && formData.ContactNo} placeholder=\"Tell Cellular\" onChange={e => setFormData({ ...formData, ContactNo: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <input name=\"WorksAt\" value={formData && formData.WorksAt} placeholder=\"Ta traha na\" onChange={e => setFormData({ ...formData, WorksAt: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div>\r\n            <input name=\"FaxNumber\" value={formData && formData.faxNumber} placeholder=\"Fax\" onChange={e => setFormData({ ...formData, FaxNumber: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <div>\r\n            <input name=\"Email\" value={formData && formData.Email} placeholder=\"Email\" onChange={e => setFormData({ ...formData, Email: e.target.value })} required />\r\n\r\n          </div>\r\n          <div>\r\n            <input name=\"MaxBorrowAmount\" value={formData && formData.MaxBorrowAmount} placeholder=\"Kredito Maksimo\" onChange={e => setFormData({ ...formData, MaxBorrowAmount: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n          {/* <div>\r\n            <input name=\"Dealer_id\" value={formData && formData.Dealer_id} placeholder=\"Dealers \" onChange={e => setFormData({ ...formData, Dealer_id: e.target.value })} required />\r\n\r\n          </div> */}\r\n          <Select\r\n            name=\"Client_id\"\r\n            placeholder={<div>Rebendadors</div>}\r\n            options={dealerData}\r\n            maxMenuHeight={150}\r\n            onChange={e => {\r\n              console.log(\"hello boss\" + e.value); setFormData({ ...formData, Dealer_id: e.value })\r\n            }}\r\n          />\r\n\r\n          {formData.Dealer_id && <ForeignData heading=\"Dealer Detail\" data={data} title=\"client\" id={formData.Dealer_id} />}\r\n\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                  name=\"Status\"\r\n                />\r\n              }\r\n              label=\"In Aktivo\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <input name=\"id\" value={formData && formData.id} placeholder=\"Id\" type=\"hidden\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n        <div class=\"btn-class\">\r\n          <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link >Submit</Link>\r\n          </Button>\r\n          <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link to={props.url}>Back</Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import BasicTable from './table';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport Form from './form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SideBar from './sidebar';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Home({ title, url, header, data, showSidebar, editUrl, viewUrl }) {\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const [show, setshow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    showSidebar(true);\r\n    const storage = window.localStorage;\r\n    if (!storage.getItem(\"token\")) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n    }\r\n    else {\r\n      console.log(\"token is there\");\r\n    }\r\n  })\r\n  const toggle = () => {\r\n    setshow(!show);\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <SideBar /> */}\r\n      <div className=\"Home\">\r\n        {console.log(\"edit ur is\" + editUrl)}\r\n        <BasicTable editUrl={editUrl} viewUrl={viewUrl} data={data} header={header} url={url} title={title} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../style/table.css';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ActionButtons from './ActionButtons';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport SideBar from '../Components/sidebar';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport ButtonAppBar from './titleheading';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: 'grey',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n\r\n});\r\n\r\nexport default function ClientTables(props) {\r\n\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\r\n    return (\r\n\r\n\r\n        <TableContainer component={Paper}>\r\n\r\n            <ButtonAppBar heading={props.title} />\r\n            <ActionButtons url={props.url} />\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead className='asad'>\r\n                    <TableRow>\r\n                        <StyledTableCell>Name </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Fat&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Carbs&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Protein&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Actions&nbsp;</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                {row.name}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n                            <Link to={props.url}> <StyledTableCell align=\"right\"> <Button className=\"edittable\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                                <EditIcon className=\"editIcon\" size=\"small\" />\r\n                            </Button></StyledTableCell></Link>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n}\r\n","import BasicTable from './table';\r\nimport React,{Component,useState} from 'react';\r\nimport Form from './form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SideBar from './sidebar';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport logo from '../images/logo.png';\r\n\r\n\r\nfunction LandingPage() {\r\n\r\n\r\n\r\n    \r\n  const[show,setshow]=useState(true);\r\n\r\n\r\n  const toggle=()=>{\r\n\r\n   setshow(!show);\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"landingPage\">\r\n      \r\n    \r\n      <div>  <img className=\"logo\" src={logo} />  </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport address from '../address'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  layout: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    maxWidth: '768px',\r\n    margin: '0 auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(8),\r\n      padding: `${theme.spacing(6)}px ${theme.spacing(4)}px`\r\n    }\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}))\r\n\r\nconst Register = (props) => {\r\n  const history = useHistory()\r\n  const classes = useStyles({})\r\n  const [formData, setFormData] = React.useState({\r\n\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    props.showSidebar(false);\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  async function activate(event) {\r\n    event.preventDefault();\r\n    //incase you want to register the user you need to do that\r\n    // alert(\"clicked theer\");\r\n    const response = await fetch(address+'/api/auth/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/',\r\n      },\r\n      body: JSON.stringify(formData)\r\n    });\r\n\r\n    // const response = await fetch(address+'/api/auth/confirm-email?token=2vU2aN', {\r\n    //   method: 'GET', \r\n\r\n\r\n    // });\r\n    console.log(response);\r\n    history.push('/login');\r\n\r\n  }\r\n\r\n  const [submitting, setSubmitting] = React.useState(false)\r\n\r\n  return (\r\n    <main className={classes.layout + \" register\"}>\r\n      <Paper className={classes.paper} elevation={2}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Typography component=\"h1\" variant=\"h4\" gutterBottom>\r\n            Register\r\n          </Typography>\r\n        </Box>\r\n        <form method=\"post\" className={classes.form} noValidate>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            autoComplete=\"fname\"\r\n            autoFocus\r\n            defaultValue={formData.firstName}\r\n\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"lastName\"\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            autoComplete=\"lname\"\r\n            defaultValue={formData.lastName}\r\n\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            defaultValue={formData.email}\r\n            onChange={e => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            defaultValue={formData.password}\r\n            onChange={e => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n          <Box mb={6}>\r\n            <Button\r\n              onClick={activate}\r\n              disabled={submitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {submitting && (\r\n                <CircularProgress size={24} className={classes.buttonProgress} />\r\n              )}\r\n              {submitting ? 'Registering...' : 'Register'}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from 'axios'\r\nimport address from '../address'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  layout: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(8),\r\n      padding: `${theme.spacing(6)}px ${theme.spacing(4)}px`\r\n    }\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 3)\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}))\r\n\r\nconst LoginForm = (props) => {\r\n  const history = useHistory();\r\n  // const [email, setEmail] = useState('');\r\n  // const [password,setPassword]=useState('');\r\n  useEffect(() => {\r\n    const storage = window.localStorage;\r\n    const token = storage.getItem(\"token\")\r\n    if(token){\r\n      history.push('/client');\r\n    }\r\n  }, [])\r\n  async function activate(event) {\r\n    event.preventDefault();\r\n    // alert(\"clicked theer\");\r\n    console.log(JSON.stringify(formData));\r\n    // const { data } = await axios.post(address+'/api/auth/login', formData);\r\n    // const accessToken = data.data['accessToken'];\r\n    // const role = data.data.isAdmin;\r\n    // console.log(data);\r\n    // console.log(role);\r\n    const accessToken = \"dada\"\r\n    if (accessToken) {\r\n      const storage = window.localStorage;\r\n      storage.setItem('token', accessToken);\r\n      // console.log(role);\r\n      storage.setItem(\"role\", 1);\r\n      history.push('/client');\r\n      console.log(\"token updated\");\r\n    }\r\n    else {\r\n      console.log(\"Token error here bro\");\r\n    }\r\n\r\n\r\n    // {\r\n    //   method: 'POST', \r\n    //   body: JSON.stringify(formData),\r\n    //   headers: {\r\n    //     // 'Content-Type': 'application/json'\r\n    //     'Content-Type': 'application/x-www-form-urlencoded',\r\n    //   },\r\n    // }\r\n    // );\r\n    // console.log(response);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    props.showSidebar(false);\r\n    // alert(window.loca//lStorage.getItem(\"token\"));\r\n    // check for token if token is there then transfer the request to the home page\r\n\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  const classes = useStyles({})\r\n  const [formData, setFormData] = React.useState({ email: '', password: '' })\r\n  const [submitting, setSubmitting] = React.useState(false)\r\n\r\n  return (\r\n    <main className={classes.layout + \" loginform\"}>\r\n      <Paper className={classes.paper} elevation={2}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Typography component=\"h1\" variant=\"h4\" gutterBottom>\r\n            Login\r\n          </Typography>\r\n          <Typography component=\"p\" gutterBottom>\r\n            Log in to your account dashboard\r\n          </Typography>\r\n        </Box>\r\n        <form method=\"post\" className={classes.form} noValidate>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            defaultValue={formData.email}\r\n            onChange={e => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            defaultValue={formData.password}\r\n            onChange={e => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n          <Box mt={3} mb={-3}>\r\n            <Button\r\n              onClick={activate}\r\n              disabled={submitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {submitting && (\r\n                <CircularProgress size={24} className={classes.buttonProgress} />\r\n              )}\r\n              {submitting ? 'Signing in...' : 'Sign In'}\r\n            </Button>\r\n          </Box>\r\n          <Box >\r\n            <Button\r\n              onClick={() => { history.push(\"/register\") }}\r\n              disabled={submitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.submit}\r\n            >\r\n              {submitting && (\r\n                <CircularProgress size={24} className={classes.buttonProgress} />\r\n              )}\r\n              {submitting ? 'Register New User...' : 'Regitser New User'}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n// import Select from 'react-select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport address from \"../address\"\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        Code: \"\", FirstName: \"\", LastName: \"\", WorkNo: \"\",\r\n        ContactNo: \"\", WorksAt: \"\",\r\n        Email: \"\", FaxNumber: \"\",\r\n        Status: \"\",\r\n        MaxBorrowAmount: \"\",  Dealer_id: \"\",\r\n\r\n\r\n\r\n\r\n    })\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n    const addClient = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/clients/upsertClient', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n\r\n                body: JSON.stringify(formData)\r\n\r\n            });\r\n\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n\r\n            NotificationManager.success('Success message', 'Title here');\r\n           history.push(props.url);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            history.push('/login');\r\n        }\r\n        else {\r\n            // formId=props.match.params.id;\r\n            response = await fetch(address+'/api/clients/getClientById/' + id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n\r\n\r\n            })\r\n\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\"+id+props.view);\r\n            console.log(response);\r\n        }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    // const { form, use } = useForm({\r\n    //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n    //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n    // // });\r\n    // const errors = use(\"errors\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Code\">Code</InputLabel>\r\n                        <Input id=\"Code\" name=\"Code\"  value={formData && formData['Code']} onChange={e => setFormData({ ...formData, Code: e.target.value, id: e.target.value })} required readOnly={props.view}  aria-describedby=\"my-helper-text\" />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"FirstName\">First Nomber</InputLabel>\r\n                        <Input id=\"FirstName\" name=\"FirstName\" readOnly={props.view} value={formData && formData.FirstName} onChange={e => setFormData({ ...formData, FirstName: e.target.value })} readOnly={props.view} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"LastName\">Last Nomber</InputLabel>\r\n                        <Input id=\"LastName\" name=\"LastName\" readOnly={props.view} value={formData && formData.LastName} placeholder=\"Last Name\" onChange={e => setFormData({ ...formData, LastName: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n              \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"WorkNo\">Tel Trabou</InputLabel>\r\n                        <Input id=\"WorkNo\" name=\"WorkNo\" readOnly={props.view} value={formData && formData.WorkNo} placeholder=\"Works No\" onChange={e => setFormData({ ...formData, WorkNo: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n              \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"ContactNo\">Tel Celluar</InputLabel>\r\n                        <Input id=\"ContactNo\" readOnly={props.view} name=\"ContactNo\" value={formData && formData.ContactNo} placeholder=\"Tele Phone No\" onChange={e => setFormData({ ...formData, ContactNo: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n       \r\n\r\n               \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"WorksAt\">Ta traha na</InputLabel>\r\n                        <Input id=\"WorksAt\" readOnly={props.view} name=\"WorksAt\" value={formData && formData.WorksAt} placeholder=\"Works At\" onChange={e => setFormData({ ...formData, WorksAt: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n                   \r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"FaxNumber\">Fax</InputLabel>\r\n                        <Input id=\"FaxNumber\" readOnly={props.view} name=\"FaxNumber\"  value={formData && formData.FaxNumber} placeholder=\"\" onChange={e => setFormData({ ...formData, FaxNumber: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n   \r\n   \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Email\">Email</InputLabel>\r\n                        <Input id=\"Email\" name=\"Email\"  readOnly={props.view} value={formData && formData.Email} placeholder=\"Email\" onChange={e => setFormData({ ...formData, Email: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"MaxBorrowAmount\">kredito Maksimo</InputLabel>\r\n                        <Input id=\"MaxBorrowAmount\" name=\"MaxBorrowAmount\" readOnly={props.view} value={formData && formData.MaxBorrowAmount} placeholder=\"Maz Borrow Amount\" onChange={e => setFormData({ ...formData, MaxBorrowAmount: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\" Dealer_id\">Rebendador</InputLabel>\r\n                        <Input id=\" Dealer_id\" name=\" Dealer_id\" readOnly={props.view} value={formData && formData.Dealer_id} placeholder=\"Dealer Id\" onChange={e => setFormData({ ...formData,  Dealer_id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n\r\n                                    onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                                    name=\"Status\"\r\n                                    readOnly={props.view}\r\n                                />\r\n                            }\r\n                            label=\"In Aktivo\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input name=\"id\" readOnly={props.view} value={formData && formData.id} placeholder=\"Id\" type=\"hidden\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n                <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport ForeignData from './ForeignData';\r\nimport {data} from './helpers'\r\nimport address from '../address'\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n  count++;\r\n  const [formData, setFormData] = useState({\r\n    \"nameNumber\":\"\",\r\n    batteryStatus:\"\",\r\n    status:\"\",\r\n    id:\"\"\r\n   \r\n   \r\n\r\n\r\n  })\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  var response;\r\n  var token;\r\n\r\n  const addClient = async (event) => {\r\n    event.preventDefault();\r\n    const storage = window.localStorage;\r\n    token=storage.getItem(\"token\");\r\n    console.log(formData);\r\n    if (token) {\r\n      response = await fetch(address+'/api/device/upsertDevice', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n\r\n        body: JSON.stringify(formData)\r\n\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(\"token\");\r\n  \r\n      NotificationManager.success('Success message', 'Title here');\r\n      history.push(props.url);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    // store.addNotification({\r\n    //   title: \"Wonderful!\",\r\n    //   message: \"Form Submitted Successfully\",\r\n    //   type: \"info\",\r\n    //   container: \"top-right\",\r\n    //   dismiss: {\r\n    //     duration: 5000,\r\n      \r\n    //   }\r\n    // });\r\n    const storage = window.localStorage;\r\n    token=storage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n    }\r\n    else {\r\n\r\n      // // formId=props.match.params.id;\r\n      // response = await fetch('http://localhost:3000/api/clients/getClientById/' + id, {\r\n\r\n      //   method: 'GET',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //     'Authorization': 'Bearer ' + token\r\n      //   }\r\n\r\n\r\n      // })\r\n       \r\n      // response=await response.json();\r\n      // setFormData(response);\r\n      \r\n      // console.log(response);\r\n    }\r\n\r\n\r\n\r\n  },[]);\r\n\r\n  // const { form, use } = useForm({\r\n  //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n  //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n  // // });\r\n  // const errors = use(\"errors\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <ReactNotification />\r\n        {console.log(\"your data is--------------------------\")}\r\n       {console.log(data)}\r\n      <div className=\"form\">\r\n    \r\n        <ButtonAppBar heading={props.heading} />\r\n        <form className=\"addForm\" noValidate>\r\n\r\n       \r\n\r\n          <div>\r\n            <input name=\"nameNumber\" value={formData && formData['nameNumber']} placeholder=\"Device Name/Number\" onChange={e => setFormData({ ...formData, \"nameNumber\": e.target.value })} required />\r\n\r\n          </div>\r\n          <div>\r\n            <input name=\"batteryStatus\" value={formData && formData.batteryStatus} placeholder=\"Battery Status\" onChange={e => setFormData({ ...formData, batteryStatus: e.target.value })} required />\r\n\r\n          </div>\r\n      \r\n          <div>\r\n            <input name=\"id\" value={formData && formData.id} placeholder=\"Device Id\"  onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n         \r\n\r\n\r\n\r\n          \r\n      \r\n\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n          \r\n                  onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                  name=\"status\"\r\n                />\r\n              }\r\n              label=\"In Aktivo\"\r\n            />\r\n          </div>\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n      \r\n        <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n      </div>\r\n \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n// import Select from 'react-select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport address from '../address'\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        \"nameNumber\": \"\",\r\n        batteryStatus: \"\",\r\n        status: \"\",\r\n        id: \"\"\r\n    })\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n    const addClient = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch('http://localhost:3000/api/device/upsertDevice', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n\r\n            NotificationManager.success('Success message', 'Title here');\r\n            history.push(props.url);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            console.log(\"in null\");\r\n            history.push('/login');\r\n        }\r\n        else {\r\n            // formId=props.match.params.id;\r\n            console.log(\"your id is \"+id);\r\n            response = await fetch(address+'/api/device/getDeviceById/' + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\" + id + props.view);\r\n            console.log(response);\r\n        }\r\n    }, []);\r\n\r\n    // const { form, use } = useForm({\r\n    //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n    //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n    // // });\r\n    // const errors = use(\"errors\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n\r\n           \r\n\r\n\r\n                    {/* <FormControl>\r\n                        <InputLabel htmlFor=\"batteryStatus\">FirstName</InputLabel>\r\n                        <Input id=\"batteryStatus\" name=\"batteryStatus\" readOnly={props.view} value={formData && formData.batteryStatus} onChange={e => setFormData({ ...formData, batteryStatus: e.target.value })} readOnly={props.view} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> \r\n                    </FormControl> */}\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"nameNumber\">NameNumber</InputLabel>\r\n                        <Input id=\"nameNumber\" name=\"nameNumber\" readOnly={props.view} value={formData && formData.nameNumber} onChange={e => setFormData({ ...formData, nameNumber: e.target.value })} readOnly={props.view} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n{/* \r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"id\">LastName</InputLabel>\r\n                        <Input id=\"id\" name=\"id\" readOnly={props.view} value={formData && formData.id} placeholder=\"Device Id\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> \r\n                    </FormControl> */}\r\n\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n\r\n                                    onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                                    name=\"status\"\r\n                                    readOnly={props.view}\r\n                                />\r\n                            }\r\n                            label=\"In Aktivo\"\r\n                        />\r\n                    </div>\r\n\r\n              \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n                <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport { selectData } from './helpers';\r\nimport ForeignData from './ForeignData';\r\nimport { data } from './helpers';\r\nimport address from \"../address\"\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n  count++;\r\n  const [deviceData, setDeviceData] = useState();\r\n  const [formData, setFormData] = useState({\r\n    id: \"\", Code: \"\", Name: \"\", MerchantType_id: \"\", AccountNo: \"\", BankName: \"\"\r\n  })\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  var response;\r\n  var token;\r\n\r\n  const addClient = async (event) => {\r\n    event.preventDefault();\r\n    const storage = window.localStorage;\r\n    token = storage.getItem(\"token\");\r\n    console.log(formData);\r\n    if (token) {\r\n      response = await fetch(address+'/api/merchants/upsertMerchant', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n\r\n        body: JSON.stringify(formData)\r\n\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(\"token\");\r\n\r\n      NotificationManager.success('Success message', 'Title here');\r\n      // history.push(props.url);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    // store.addNotification({\r\n    //   title: \"Wonderful!\",\r\n    //   message: \"Form Submitted Successfully\",\r\n    //   type: \"info\",\r\n    //   container: \"top-right\",\r\n    //   dismiss: {\r\n    //     duration: 5000,\r\n\r\n    //   }\r\n    // });\r\n    selectData(address+'/api/merchants/getAllMerchantTypes', 'Title', 'id').then((data) => { setDeviceData(data) });\r\n    const storage = window.localStorage;\r\n    token = storage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n    }\r\n    else {\r\n\r\n      // // formId=props.match.params.id;\r\n      // response = await fetch(address+'/api/clients/getClientById/' + id, {\r\n\r\n      //   method: 'GET',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //     'Authorization': 'Bearer ' + token\r\n      //   }\r\n\r\n\r\n      // })\r\n\r\n      // response=await response.json();\r\n      // setFormData(response);\r\n\r\n      // console.log(response);\r\n    }\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  // const { form, use } = useForm({\r\n  //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n  //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n  // // });\r\n  // const errors = use(\"errors\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactNotification />\r\n      <div className=\"form\">\r\n\r\n        <ButtonAppBar heading={props.heading} />\r\n        <form className=\"addForm\" noValidate>\r\n          <div>\r\n            <input name=\"Code\" value={formData && formData['Code']} placeholder=\"Skelta Code\" onChange={e => setFormData({ ...formData, Code: e.target.value, id: e.target.value })} required />\r\n          </div>\r\n          <div>\r\n            <input name=\"Name\" value={formData && formData.Name} placeholder=\"Name\" onChange={e => setFormData({ ...formData, Name: e.target.value })} required />\r\n          </div>\r\n          <div>\r\n            <input name=\"AccountNo\" value={formData && formData.AccountNo} placeholder=\"AccountNo\" onChange={e => setFormData({ ...formData, AccountNo: e.target.value })} required />\r\n          </div>\r\n          <div>\r\n            <input name=\"BankName\" value={formData && formData.BankName} placeholder=\"BankName\" onChange={e => setFormData({ ...formData, BankName: e.target.value })} required />\r\n          </div>\r\n          <Select\r\n            name=\"MerchantType_id\"\r\n            placeholder={<div>Merchant Id</div>}\r\n            options={deviceData}\r\n            maxMenuHeight={150}\r\n            onChange={e => { console.log(e); setFormData({ ...formData, MerchantType_id: e.value }) }}\r\n          />\r\n          \r\n          {formData.MerchantType_id && <ForeignData heading=\"Merchant Type\" data={data} title=\"merchantstype\" id={formData.MerchantType_id} />}\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n\r\n                  onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                  name=\"Status\"\r\n                />\r\n              }\r\n              label=\"In Aktivo\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input name=\"id\" value={formData && formData.id} placeholder=\"Id\" type=\"hidden\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n\r\n        <div class=\"btn-class\">\r\n          <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link >Submit</Link>\r\n          </Button>\r\n          <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link to={props.url}>Back</Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n// import Select from 'react-select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\n\r\nimport address from \"../address\"\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        id:\"\",Code: \"\", Name: \"\", MerchantType_id:\"\" ,AccountNo:\"\" ,BankName:\"\"\r\n    \r\n      })\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n    const addClient = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/merchants/upsertMerchant', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n\r\n                body: JSON.stringify(formData)\r\n\r\n            });\r\n\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n\r\n            NotificationManager.success('Success message', 'Title here');\r\n            history.push(props.url);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            console.log(\"in null\");\r\n            history.push('/login');\r\n\r\n        }\r\n        else {\r\n\r\n            // formId=props.match.params.id;\r\n            response = await fetch(address+'/api/merchants/getMerchantById/' + id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n\r\n\r\n            })\r\n\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\"+id+props.view);\r\n            console.log(response);\r\n        }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    // const { form, use } = useForm({\r\n    //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n    //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n    // // });\r\n    // const errors = use(\"errors\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Code\">Code</InputLabel>\r\n                        <Input id=\"Code\" name=\"Code\"  value={formData && formData['Code']} onChange={e => setFormData({ ...formData, Code: e.target.value, id: e.target.value })} required readOnly={props.view}  aria-describedby=\"my-helper-text\" />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Name\">Name</InputLabel>\r\n                        <Input id=\"Name\" name=\"Name\" readOnly={props.view} value={formData && formData.Name} onChange={e => setFormData({ ...formData, Name: e.target.value })} readOnly={props.view} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"BankName\">Address</InputLabel>\r\n                        <Input id=\"BankName\" name=\"BankName\" readOnly={props.view} value={formData && formData.BankName} placeholder=\"Address\" onChange={e => setFormData({ ...formData, BankName: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"AccountNo\">Address</InputLabel>\r\n                        <Input id=\"AccountNo\" name=\"AccountNo\" readOnly={props.view} value={formData && formData.AccountNo} placeholder=\"Address\" onChange={e => setFormData({ ...formData, AccountNo: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n              \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Code\">Address</InputLabel>\r\n                        <Input id=\"Code\" name=\"Code\" readOnly={props.view} value={formData && formData.Code} placeholder=\"Address\" onChange={e => setFormData({ ...formData, Code: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n              \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"MerchantType_id\">Device Id</InputLabel>\r\n                        <Input id=\"MerchantType_id\" readOnly={props.view} name=\"MerchantType_id\" value={formData && formData.MerchantType_id} placeholder=\"MerchantType_id\" onChange={e => setFormData({ ...formData, MerchantType_id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n       \r\n\r\n\r\n               \r\n\r\n\r\n\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n\r\n                                    onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                                    name=\"Status\"\r\n                                    readOnly={props.view}\r\n                                />\r\n                            }\r\n                            label=\"In Aktivo\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input name=\"id\" readOnly={props.view} value={formData && formData.id} placeholder=\"Id\" type=\"hidden\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n                <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport address from '../address'\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n  count++;\r\n  const [formData, setFormData] = useState({\r\n    number:\"\",\r\n    status:\"\",\r\n    id:\"\"\r\n   \r\n   \r\n\r\n\r\n  })\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  var response;\r\n  var token;\r\n\r\n  const addClient = async (event) => {\r\n    event.preventDefault();\r\n    const storage = window.localStorage;\r\n    token=storage.getItem(\"token\");\r\n    console.log(formData);\r\n    if (token) {\r\n      response = await fetch(address+'/api/nfcCard/upsertNfcCard', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n\r\n        body: JSON.stringify(formData)\r\n\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(\"token\");\r\n  \r\n      NotificationManager.success('Success message', 'Title here');\r\n      history.push(props.url);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    // store.addNotification({\r\n    //   title: \"Wonderful!\",\r\n    //   message: \"Form Submitted Successfully\",\r\n    //   type: \"info\",\r\n    //   container: \"top-right\",\r\n    //   dismiss: {\r\n    //     duration: 5000,\r\n      \r\n    //   }\r\n    // });\r\n    const storage = window.localStorage;\r\n    token=storage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n\r\n    }\r\n    else {\r\n\r\n      // // formId=props.match.params.id;\r\n      // response = await fetch('http://localhost:3000/api/clients/getClientById/' + id, {\r\n\r\n      //   method: 'GET',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //     'Authorization': 'Bearer ' + token\r\n      //   }\r\n\r\n\r\n      // })\r\n       \r\n      // response=await response.json();\r\n      // setFormData(response);\r\n      \r\n      // console.log(response);\r\n    }\r\n\r\n\r\n\r\n  },[]);\r\n\r\n  // const { form, use } = useForm({\r\n  //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n  //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n  // // });\r\n  // const errors = use(\"errors\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <ReactNotification />\r\n      <div className=\"form\">\r\n\r\n        <ButtonAppBar heading={props.heading} />\r\n        <form className=\"addForm\" noValidate>\r\n          <div>\r\n            <input name=\"number\" value={formData && formData['number']} placeholder=\"Number\" onChange={e => setFormData({ ...formData, \"number\": e.target.value , \"id\" : e.target.value})} required />\r\n          </div>\r\n          {/* <div>\r\n            <input name=\"id\" value={formData && formData.id} placeholder=\"Device Id\"  onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n          </div> */}\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, status: e.target.checked }) }}\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                  name=\"status\"\r\n                />\r\n              }\r\n              label=\"In Aktivo\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n// import Select from 'react-select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport address from \"../address\";\r\n\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        number: \"\",\r\n    \r\n        status: \"\",\r\n        id: \"\"\r\n\r\n\r\n\r\n\r\n    })\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n    const addClient = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/nfcCard/upsertNfcCard', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n\r\n                body: JSON.stringify(formData)\r\n\r\n            });\r\n\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n\r\n            NotificationManager.success('Success message', 'Title here');\r\n            // history.push(props.url);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            console.log(\"in null\");\r\n            history.push('/login');\r\n\r\n        }\r\n        else {\r\n\r\n            // formId=props.match.params.id;\r\n            response = await fetch(address+'/api/nfcCard/getNfcCardById/' + id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n\r\n\r\n            })\r\n\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\" + id + props.view);\r\n            console.log(response);\r\n        }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    // const { form, use } = useForm({\r\n    //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n    //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n    // // });\r\n    // const errors = use(\"errors\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"number\">Card Number</InputLabel>\r\n                        <Input id=\"number\" name=\"number\" value={formData && formData['number']} onChange={e => setFormData({ ...formData, number: e.target.value , id : e.target.value})} required readOnly={props.view} aria-describedby=\"my-helper-text\" />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n              \r\n\r\n{/* \r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"id\">Card Id</InputLabel>\r\n                        <Input id=\"id\" name=\"id\" readOnly={props.view} value={formData && formData.id} placeholder=\"Device Id\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n                        <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n                    </FormControl> */}\r\n\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n\r\n                                    onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                                    name=\"status\"\r\n                                    readOnly={props.view}\r\n                                />\r\n                            }\r\n                            label=\"In Aktivo\"\r\n                        />\r\n                    </div>\r\n\r\n                \r\n                 \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n                <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport { selectData } from './helpers';\r\nimport DeviceEditForm from './DeviceEdit';\r\nimport ForeignData from './ForeignData';\r\nimport { data } from './helpers';\r\nimport address from '../address'\r\n\r\nlet count = 1;\r\n\r\nfunction Form(props) {\r\n  count++;\r\n  const [merchantData, setMerchantData] = useState([]);\r\n  const [clientData, setClientData] = useState([]);\r\n  const [PaybackPeriod, setPaybackPeriod] = useState([]);\r\n  const [nfcCardData, setCardData] = useState(true);\r\n  const [show, setShow] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    DateTime: \"\", Amount: \"\", PaybackPeriod: \"\", TypeOfPayment: \"\",\r\n    DateDeposit: null, Client_id: \"\",\r\n    NfcCard_id: \"\", Merchants_id: \"\",\r\n    id: \"\", status: \"\"\r\n  })\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  var response;\r\n  var token;\r\n\r\n  const addClient = async (event) => {\r\n    event.preventDefault();\r\n    const storage = window.localStorage;\r\n    token = storage.getItem(\"token\");\r\n    console.log(formData);\r\n    if (token) {\r\n    \r\n      response = await fetch(address+'/api/issuancehistory/upsertIssuancehistory', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n\r\n        body: JSON.stringify(formData)\r\n\r\n      });\r\n\r\n      response = await response.json();\r\n      console.log(response);\r\n\r\n      NotificationManager.success('Success message', 'Title here');\r\n      //   history.push(props.url);\r\n    }\r\n\r\n\r\n  }\r\n  const getPaybackPeriod = async (id) => {\r\n\r\n    alert(id)\r\n    const storage = window.localStorage;\r\n    const token = storage.getItem(\"token\");\r\n\r\n    var response = await fetch(address+'/api/merchants/getMerchantById/' + id, {\r\n\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    })\r\n    response = await response.json();\r\n    const MerchantType_id = response.MerchantType_id\r\n    response = await fetch(address+'/api/merchants/getMerchantTypeDiscountByMerchantType_id/' + MerchantType_id, {\r\n\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    })\r\n    response = await response.json();\r\n    console.log(\"selected data----sdfs----------------\");\r\n    console.log(response)\r\n    let data = []\r\n    response.map((value) => {\r\n      var obj = { label: \"\", value: \"\" }\r\n      obj.label = value[\"NumberOfMonths\"];\r\n      obj.value = value[\"id\"];\r\n      data.push(obj);\r\n    })\r\n    setPaybackPeriod(data)\r\n    // setPaybackPeriod(tempData)\r\n  }\r\n\r\n\r\n  useEffect(async () => {\r\n    console.log(\"--------------------------------in effect---------------\");\r\n    // store.addNotification({\r\n    //   title: \"Wonderful!\",\r\n    //   message: \"Form Submitted Successfully\",\r\n    //   type: \"info\",\r\n    //   container: \"top-right\",\r\n    //   dismiss: {\r\n    //     duration: 5000,\r\n    //   }\r\n    // });\r\n\r\n    selectData(address+'/api/clients/getAllClients', 'FirstName', 'id').then((data) => { console.log(data); setClientData(data) });\r\n    selectData(address+'/api/merchants/getAllMerchants', 'Name', 'id').then((data) => { setMerchantData(data) });\r\n    selectData(address+'/api/nfcCard/getAllNfcCards', 'number', 'id').then((data) => { setCardData(data) });\r\n    const storage = window.localStorage;\r\n\r\n    token = storage.getItem(\"token\");\r\n    if (!token) {\r\n      console.log(\"in null\");\r\n      history.push('/login');\r\n    }\r\n    else {\r\n\r\n      // // formId=props.match.params.id;\r\n      // response = await fetch('http://localhost:3000/api/clients/getClientById/' + id, {\r\n\r\n      //   method: 'GET',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //     'Authorization': 'Bearer ' + token\r\n      //   }\r\n\r\n\r\n      // })\r\n\r\n      // response=await response.json();\r\n      // setFormData(response);\r\n\r\n      // console.log(response);\r\n    }\r\n\r\n\r\n\r\n  }, [formData]);\r\n\r\n  // const { form, use } = useForm({\r\n  //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n  //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n  // // });\r\n  // const errors = use(\"errors\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactNotification />\r\n      <div className=\"form\">\r\n\r\n        <ButtonAppBar heading={props.heading} />\r\n        <form className=\"addForm\" noValidate>\r\n\r\n\r\n\r\n          <div>\r\n            <input type=\"date\" name=\"DateTime\" value={formData && formData['DateTime']} placeholder=\"Date\" onChange={e => setFormData({ ...formData, DateTime: e.target.value, id: e.target.value })} required />\r\n\r\n\r\n\r\n          </div>\r\n          <div>\r\n            <input name=\"Amount\" value={formData && formData.Amount} placeholder=\"Montante\" onChange={e => setFormData({ ...formData, Amount: e.target.value })} required />\r\n\r\n          </div>\r\n          <Select\r\n            name=\"Client_id\"\r\n            placeholder={<div>kliente Code</div>}\r\n            options={clientData}\r\n            maxMenuHeight={150}\r\n            onChange={e => {\r\n              console.log(\"hello boss\" + e.value); setFormData({ ...formData, Client_id: e.value })\r\n            }}\r\n\r\n          />\r\n\r\n          {formData.Client_id && <ForeignData heading=\"Client Detail\" data={data} title=\"client\" id={formData.Client_id} />}\r\n\r\n          {/* <ForeignData data={data} title=\"client\"/> */}\r\n\r\n\r\n          {/* <div>\r\n            <input name=\"TypeOfPayment\" value= {formData && formData.TypeOfPayment} placeholder=\"Type Of Payment\" onChange={e => setFormData({ ...formData, TypeOfPayment: e.target.value })} required />\r\n\r\n          </div> */}\r\n\r\n          <Select\r\n            name=\"NfcCard_id\"\r\n            placeholder={<div>NFC Card</div>}\r\n            options={nfcCardData}\r\n            maxMenuHeight={150}\r\n            onChange={e => setFormData({ ...formData, NfcCard_id: e.value })}\r\n\r\n          />\r\n\r\n\r\n\r\n          {formData.NfcCard_id && <ForeignData heading=\"Nfc Card Detail\" data={data} title=\"nfcCard\" id={formData.NfcCard_id} />}\r\n\r\n\r\n          <Select\r\n            name=\"Merchants_id\"\r\n            placeholder={<div>Negoshi</div>}\r\n            options={merchantData}\r\n            maxMenuHeight={150}\r\n            onChange={e => { setFormData({ ...formData, Merchants_id: e.value }); getPaybackPeriod(e.value) }}\r\n\r\n          />\r\n\r\n\r\n          {/* <div>\r\n            <input name=\"DateDeposit\" value={formData && formData.DateDeposit} placeholder=\"Date Deposit\" onChange={e => setFormData({ ...formData, DateDeposit: e.target.value })} required />\r\n\r\n          </div>  */}\r\n          {formData.Merchants_id && <ForeignData data={data} heading=\"Merchant Detail\" title=\"merchants\" id={formData.Merchants_id} />}\r\n          <Select\r\n            name=\"PaybackPeriod\"\r\n            placeholder={<div>Periodo di Pago</div>}\r\n            options={PaybackPeriod}\r\n            maxMenuHeight={150}\r\n            onChange={e => {\r\n              console.log(\"hello boss\" + e.value); setFormData({ ...formData, PaybackPeriod: e.value })\r\n            }}\r\n\r\n          />\r\n\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n\r\n                  onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                  icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                  name=\"Status\"\r\n                />\r\n              }\r\n              label=\"In Aktivo\"\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n\r\n        <div class=\"btn-class\">\r\n          <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link >Submit</Link>\r\n          </Button>\r\n          <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n            <Link to={props.url}>Back</Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\n// import Select from 'react-select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport {selectData} from './helpers';\r\nimport address from \"../address\";\r\n\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n     const[merchantData,setMerchantData]=useState([]);\r\n  const[clientData,setClientData]=useState([]);\r\n  const[nfcCardData,setCardData]=useState([]);\r\n    const [formData, setFormData] = useState({\r\n        DateTime: \"\", Amount: \"\", PaybackPeriod: \"\", TypeOfReturnPayment: \"\",\r\n        DateDeposit: \"\", Client_id: \"\",\r\n        NfcCard_id: \"\", Merchants_id: \"\",\r\n        id: \"\", status: \"\"\r\n\r\n    })\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n    var token;\r\n\r\n    const addClient = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/issuancehistory/upsertIssuancehistory', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n            NotificationManager.success('Success message', 'Title here');\r\n            history.push(props.url);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        // store.addNotification({\r\n        //     title: \"Wonderful!\",\r\n        //     message: \"Form Submitted Successfully\",\r\n        //     type: \"info\",\r\n        //     container: \"top-right\",\r\n        //     dismiss: {\r\n        //         duration: 5000,\r\n\r\n        //     }\r\n        // });\r\n        selectData(address+'/api/clients/getAllClients', 'FirstName', 'id').then((data) => { setClientData(data) });\r\n        selectData(address+'/api/merchants/getAllMerchants', 'Name', 'id').then((data) => { setMerchantData(data) });\r\n        selectData(address+'/api/nfcCard/getAllNfcCards', 'number', 'id').then((data) => { setCardData(data) });\r\n        const storage = window.localStorage;\r\n        token = storage.getItem(\"token\");\r\n        if (!token) {\r\n            console.log(\"in null\");\r\n            history.push('/login');\r\n        }\r\n        else {\r\n            // formId=props.match.params.id;\r\n            response = await fetch(address+'/api/issuancehistory/getIssuancehistoryById/' + id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n\r\n\r\n            })\r\n\r\n            response = await response.json();\r\n            setFormData(response);\r\n            console.log(\"your response is\" + id + props.view);\r\n            console.log(response);\r\n        }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    // const { form, use } = useForm({\r\n    //   defaultValues: { firstName: \"\", lastName: \"\", framework: \"\" },\r\n    //   onSubmit: (values) => alert(JSON.stringify(values, undefined, 2))\r\n    // // });\r\n    // const errors = use(\"errors\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"DateTime\">Date</InputLabel>\r\n                        <Input id=\"DateTime\" name=\"DateTime\" value={formData && formData['DateTime']} onChange={e => setFormData({ ...formData, DateTime: e.target.value })} required readOnly={props.view} aria-describedby=\"my-helper-text\" />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Amount\">Amount</InputLabel>\r\n                        <Input id=\"Amount\" name=\"Amount\" readOnly={props.view} value={formData && formData.Amount} onChange={e => setFormData({ ...formData, Amount: e.target.value })} readOnly={props.view} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"PaybackPeriod\">Payment Period</InputLabel>\r\n                        <Input id=\"PaybackPeriod\" name=\"PaybackPeriod\" readOnly={props.view} value={formData && formData.PaybackPeriod } placeholder=\"Last Name\" onChange={e => setFormData({ ...formData, PaybackPeriod: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"TypeOfReturnPayment\">Type Of Payment</InputLabel>\r\n                        <Input id=\"TypeOfReturnPayment\" name=\"TypeOfReturnPayment\" readOnly={props.view} value={formData && formData.TypeOfReturnPayment} placeholder=\"Works No\" onChange={e => setFormData({ ...formData, TypeOfReturnPayment: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"DateDeposit\">Date Deposit</InputLabel>\r\n                        <Input id=\"DateDeposit\" readOnly={props.view} name=\"DateDeposit\" value={formData && formData.DateDeposit} placeholder=\"DateDeposit\" onChange={e => setFormData({ ...formData, DateDeposit: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Client_id\">Client id</InputLabel>\r\n                        <Input id=\"Client_id\" readOnly={props.view} name=\"Client_id\" value={formData && formData.Client_id} placeholder=\"Works At\" onChange={e => setFormData({ ...formData, Client_id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"NfcCard_id\">NfcCard id</InputLabel>\r\n                        <Input id=\"NfcCard_id\" readOnly={props.view} name=\"NfcCard_id\" value={formData && formData.NfcCard_id} placeholder=\"NfcCard_id\" onChange={e => setFormData({ ...formData, NfcCard_id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"Merchants_id\">Merchants Id</InputLabel>\r\n                        <Input id=\"Merchants_id\" name=\"Merchants_id\" readOnly={props.view} value={formData && formData.Merchants_id} placeholder=\"Email\" onChange={e => setFormData({ ...formData, Merchants_id: e.target.value })} required />\r\n                        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                    </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    onChange={(e) => { console.log(e.target.checked); setFormData({ ...formData, Status: e.target.checked }) }}\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                                    name=\"Status\"\r\n                                    readOnly={props.view}\r\n                                />\r\n                            }\r\n                            label=\"In Aktivo\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input name=\"id\" readOnly={props.view} value={formData && formData.id} placeholder=\"Id\" type=\"hidden\" onChange={e => setFormData({ ...formData, id: e.target.value })} required />\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n                <div class=\"btn-class\">\r\n        <Button onClick={addClient} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link >Submit</Link>\r\n        </Button>\r\n        <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n          <Link to={props.url}>Back</Link>\r\n        </Button>\r\n        </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, InsertEmoticonSharp, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport { selectData } from './helpers';\r\nimport ForeignData from './ForeignData';\r\nimport { data } from './helpers';\r\nimport address from '../address'\r\n\r\n\r\nlet count = 0;\r\n\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        Title: \"\", id: \"\"\r\n    })\r\n\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     selectData(address+'/api/merchants/getAllMerchantTypes', 'Title', 'id').then((data)=>{ set})\r\n    // })\r\n\r\n    var response;\r\n    const addMerchantType = async (event) => {\r\n        event.preventDefault();\r\n        const storage = window.localStorage;\r\n        const token = storage.getItem(\"token\");\r\n\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/merchants/createMerchantType', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n            NotificationManager.success('Success message', 'Title here');\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n    \r\n   \r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n                    <div>\r\n                        <input name=\"Title\" value={formData && formData['Title']} placeholder=\"Title\" onChange={e => setFormData({ ...formData, Title: e.target.value, id: e.target.value })} required />\r\n                    </div>\r\n                </form>\r\n                <div class=\"btn-class\">\r\n                    <Button onClick={addMerchantType} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                        <Link >Submit</Link>\r\n                    </Button>\r\n                    <Button className=\"cancel\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                        <Link to={props.url}>Back</Link>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Form;\r\n","import { render } from \"react-dom\";\r\nimport { useForm } from \"react-cool-form\";\r\nimport '../style/form.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonAppBar from './titleheading';\r\nimport { CompassCalibrationOutlined, InsertEmoticonSharp, PinDropSharp } from \"@material-ui/icons\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { FormControl, Input, FormHelperText } from '@material-ui/core';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport SideBar from './sidebar';\r\nimport axios from 'axios';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport 'react-notifications-component/dist/theme.css';\r\nimport { store } from 'react-notifications-component';\r\nimport Select from 'react-select';\r\nimport { selectData } from './helpers';\r\nimport ForeignData from './ForeignData';\r\nimport { data } from './helpers';\r\nimport address from '../address'\r\n\r\n\r\nlet count = 0;\r\nfunction Form(props) {\r\n    count++;\r\n    const [formData, setFormData] = useState({\r\n        Title: \"\", id: \"\"\r\n    })\r\n    const [discountForm, setDiscountForm] = useState([{\r\n        id: \"\",\r\n        NumberOfMonths: \"\",\r\n        Interest: \"\",\r\n        MerchantType_id: \"\"\r\n    }])\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    var response;\r\n\r\n    useEffect(async () => {\r\n        const storage = window.localStorage;\r\n        const token = storage.getItem(\"token\");\r\n\r\n        console.log(formData);\r\n        if (token) {\r\n            response = await fetch(address+'/api/merchants/getMerchantTypeById/' + id, {\r\n\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n            response = await response.json();\r\n            console.log(\"token\");\r\n            NotificationManager.success('Success message', 'Title here');\r\n            setFormData(response)\r\n            const MerchantType_id = id\r\n            response = await fetch(address+'/api/merchants/getMerchantTypeDiscountByMerchantType_id/' + MerchantType_id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n            response = await response.json();\r\n            let data = []\r\n            response.map((value) => {\r\n                var obj = { id: \"\", NumberOfMonths: \"\", Interest: \"\", MerchantType_id: \"\" }\r\n                obj.id = value[\"id\"];\r\n                obj.NumberOfMonths = value[\"NumberOfMonths\"]\r\n                obj.Interest = value[\"Interest\"]\r\n                obj.MerchantType_id = value[\"MerchantType_id\"]\r\n                data.push(obj);\r\n            })\r\n            setDiscountForm(data)\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     selectData(address+'/api/merchants/getAllMerchantTypes', 'Title', 'id').then((data)=>{ set})\r\n    // })\r\n\r\n\r\n    // const addMerchantType = async (event) => {\r\n    //     event.preventDefault();\r\n    //     const storage = window.localStorage;\r\n    //     const token = storage.getItem(\"token\");\r\n\r\n    //     console.log(formData);\r\n    //     if (token) {\r\n    //         response = await fetch(address+'/api/merchants/createMerchantType', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //                 'Authorization': 'Bearer ' + token\r\n    //             },\r\n    //             body: JSON.stringify(formData)\r\n    //         });\r\n    //         response = await response.json();\r\n    //         console.log(\"token\");\r\n    //         NotificationManager.success('Success message', 'Title here');\r\n    //     }\r\n    //     else {\r\n    //         history.push('/login');\r\n    //     }\r\n    // }\r\n    const addDiscountForm = async () => {\r\n\r\n        const storage = window.localStorage;\r\n        const token = storage.getItem(\"token\");\r\n        console.log(discountForm)\r\n        if (token) {\r\n            discountForm.map(async (item, index) => {\r\n                console.log(item)\r\n                let api = \"upsertMerchantTypeDiscount\"\r\n                if (item.id == \"\") {\r\n                    api = \"createMerchantTypeDiscount\"\r\n                }\r\n                response = await fetch(address+'/api/merchants/' + api, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token\r\n                    },\r\n                    body: JSON.stringify(item)\r\n                });\r\n                response = await response.json();\r\n                console.log(response);\r\n\r\n                NotificationManager.success('Success message', 'Title here');\r\n                //   history.push(props.url);\r\n\r\n\r\n            })\r\n        }\r\n    }\r\n    const addRow = (event) => {\r\n        event.preventDefault()\r\n        setDiscountForm([...discountForm, {\r\n        }]);\r\n    }\r\n    const updateDiscountFormFields = index => e => {\r\n        let newArray = [...discountForm]\r\n        if (e.target.name == \"Interest\") {\r\n            newArray[index] = {\r\n                id: \"\",\r\n                NumberOfMonths: newArray[index].NumberOfMonths,\r\n                [e.target.name]: e.target.value,\r\n                MerchantType_id: formData.id\r\n\r\n            }\r\n        }\r\n        else {\r\n            newArray[index] = {\r\n                id: \"\",\r\n                [e.target.name]: e.target.value,\r\n                Interest: newArray[index].Interest,\r\n                MerchantType_id: formData.id\r\n            }\r\n        }\r\n        setDiscountForm(newArray)\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        addDiscountForm()\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <ReactNotification />\r\n            <div className=\"form\">\r\n                <ButtonAppBar heading={props.heading} />\r\n                <form className=\"addForm\" noValidate>\r\n                    <div>\r\n                        <input disabled name=\"Title\" value={formData && formData['Title']} placeholder=\"Title\" onChange={e => setFormData({ ...formData, Title: e.target.value, id: e.target.value })} required />\r\n                    </div>\r\n                    <div>\r\n                        {discountForm.map((item, index) => (\r\n                            <div>\r\n                                {/* <input name=\"NumberOfMonths\" value={discountForm && item['NumberOfMonths']} placeholder=\"Number Of Months\" onChange={updateDiscountFormFields(index)} required />\r\n                                <input name=\"Interest\" value={discountForm && item['Interest']} placeholder=\"Interest Percentage\" onChange={updateDiscountFormFields(index)} required /> */}\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"NumberOfMonths\">Number Of Months</InputLabel>\r\n                                    <Input id=\"NumberOfMonths\" name=\"NumberOfMonths\" value={discountForm && item['NumberOfMonths']} onChange={updateDiscountFormFields(index)} required aria-describedby=\"my-helper-text\" />\r\n                                    {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                                </FormControl><FormControl>\r\n                                    <InputLabel htmlFor=\"Interest\">Interest</InputLabel>\r\n                                    <Input id=\"Interest\" name=\"Interest\" value={discountForm && item['Interest']} onChange={updateDiscountFormFields(index)} required aria-describedby=\"my-helper-text\" />\r\n                                    {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                        ))\r\n                        }\r\n                        <Button onClick={addRow} size=\"small\"> Add Row</Button>\r\n                    </div>\r\n                    <div class=\"btn-class\">\r\n                        <Button onClick={handleSubmit} className=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\">\r\n                            <Link >Submit</Link>\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Form;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport BasicTable from './Components/table';\r\nimport React, { Component, useState, Suspense, lazy, useEffect } from 'react';\r\nimport Home from './Components/Home';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Form from './Components/form';\r\nimport SideBar from './Components/sidebar';\r\nimport ButtonAppBar from './Components/titleheading';\r\nimport ClientTables from './Components/client';\r\nimport landingPage from './Components/LandingPage';\r\nimport Register from './Components/Registration';\r\nimport LoginForm from './Components/login';\r\nimport EditForm from './Components/EditClient';\r\nimport DeviceAddForm from './Components/Deviceadd';\r\nimport DeviceEditForm from './Components/DeviceEdit';\r\nimport MerchantsAdd from './Components/MerchantsAdd';\r\nimport MerchantType from './Components/MerchantType';\r\nimport MerchantsEdit from './Components/MerchantsEdit';\r\nimport AddNfcCard from './Components/addNfcCard';\r\nimport EditNfcCard from './Components/EditNfcCard';\r\nimport AddIssuanceHistory from './Components/AddIssuanceHistory';\r\nimport EditIssuanceHistory from './Components/EditIsuuanceHistory';\r\nimport MerchantTypeAdd from './Components/MerchantTypeAdd'\r\nimport MerchantTypeEdit from './Components/MerchantTypeEdit'\r\nimport address from './address';\r\n\r\nfunction App() {\r\n\r\n  var clientHeader = ['Code', 'Nomber kliente', 'ID', 'In-aktivo', 'Group', 'Actions'];\r\n  var clientHeaderEng = ['c_code', 'c_name', 'c_familyName', 'c_address', 'c_identificationNo', 'c_badPayer', ''];\r\n  var dealerHeader = ['Code', 'Nomber kliente', 'ID/sedula', 'Kredito Maksimo', 'Group', 'Actions'];\r\n  // var data = [['1-a001', 'antonia,nilza', '', 'Yes', 'm'], ['1-a003', 'albert,shermine', '1964090414', 'No', 'm'], ['1-a006', 'antersyn,rignald', '1950320212', 'No', 'm'], ['1-a007', 'antonia,joiseline c', '1976032204', 'Yes', 'm']];\r\n  // const Form = lazy(() => import('./Components/form'));\r\n  \r\n  var data = {\r\n\r\n    client: {\r\n      deleteUrl: address + '/api/clients/deleteClient/',\r\n      fetchUrl: address + '/api/clients/getAllClients',\r\n      title: 'Kliente',\r\n      clientHeader: ['Code', 'First Nomber', 'Last Nomber', 'Email', 'Tell Cellular', 'Ta traha na', 'Fax', 'Kredito Maksimo', 'Status', 'Issuance History', 'Actions',],\r\n      clientColumns: ['Code', 'FirstName', 'LastName', 'Email', 'ContactNo', 'WorksAt', 'FaxNumber', 'MaxBorrowAmount', 'Status', 'issuanceHistory'],\r\n      editUrl: \"/editclient/\",\r\n      viewUrl: \"/viewclient/\",\r\n      addButtonUrl: '/addclient',\r\n      issuanceHistoryUrl: '/issuancehistory/',\r\n      url: '/client'\r\n    },\r\n    nfcCard: {\r\n      deleteUrl: address + '/api/nfcCard/deleteNfcCard/',\r\n      fetchUrl: address + '/api/nfcCard/getAllNfcCards',\r\n      title: 'NFC Cards',\r\n      clientHeader: ['ID', 'Nomber', 'Status', 'Actions'],\r\n      clientColumns: ['id', 'number', 'status'],\r\n      editUrl: \"/editnfccard/\",\r\n      viewUrl: \"/viewnfccard/\",\r\n      addButtonUrl: '/addnfccard',\r\n      url: '/nfccard'\r\n    },\r\n    device: {\r\n      deleteUrl: address + '/api/device/deleteDevice/',\r\n      fetchUrl: address + '/api/device/getAllDevices',\r\n      title: 'Device',\r\n      clientHeader: ['ID', 'Nomber/Number', 'Status', 'Actions'],\r\n      clientColumns: ['id', 'nameNumber', 'status'],\r\n      editUrl: \"/editdevice/\",\r\n      viewUrl: \"/viewdevice/\",\r\n      addButtonUrl: '/adddevice',\r\n      url: '/device'\r\n    },\r\n    merchants: {\r\n      deleteUrl: address + '/api/merchants/deleteMerchant/',\r\n      fetchUrl: address + '/api/merchants/getAllMerchants',\r\n      title: 'Merchants',\r\n      clientHeader: ['Code Negoshi', 'Nomber Negoshi', 'Rekening', 'Bank', 'Actions'],\r\n      clientColumns: ['Code', 'Name', 'AccountNo', 'BankName'],\r\n      editUrl: \"/editmerchants/\",\r\n      viewUrl: \"/viewmerchants/\",\r\n      addButtonUrl: '/addmerchants',\r\n      url: \"/merchants\"\r\n    },\r\n    merchantType: {\r\n      deleteUrl: address + '/api/merchants/deleteMerchantType/',\r\n      fetchUrl: address + '/api/merchants/getAllMerchantTypes',\r\n      title: 'Merchant Type',\r\n      clientHeader: ['Nomber', 'Actions'],\r\n      clientColumns: ['Title'],\r\n      editUrl: \"/editmerchantType/\",\r\n      viewUrl: \"/viewmerchantType/\",\r\n      addButtonUrl: '/addmerchantType',\r\n      url: \"/merchants\"\r\n    },\r\n    issuanceHistory: {\r\n      deleteUrl: address + '/api/issuancehistory/deleteIssuancehistory/',\r\n      fetchUrl: address + '/api/issuancehistory/getAllIssuancehistories',\r\n      title: 'Issuance History',\r\n      clientHeader: ['Fetcha', 'Kliente', 'Montante', 'Periodo di Pago', 'Nfc Card', 'Negoshi', 'Actions'],\r\n      clientColumns: ['id', 'Client_id', 'Amount', 'PaybackPeriod', 'NfcCard_id', 'Merchants_id'],\r\n      editUrl: \"/editissuancehistory/\",\r\n      viewUrl: \"/viewissuancehistory/\",\r\n      addButtonUrl: '/adddissuancehistory',\r\n      url: '/issuancehistory'\r\n    },\r\n    payments: {\r\n      deleteUrl: address + '/api/issuancehistory/deleteIssuancehistory/',\r\n      fetchUrl: address + '/api/issuancehistory/getAllIssuancehistoriesByAmountPaid',\r\n      title: 'Pending Payments',\r\n      clientHeader: ['kliente Code', 'fecha di Deposito', 'Montante total pa fetcha', 'Actions'],\r\n      clientColumns: ['Client_id', 'DateDeposit', 'AmountPaid'],\r\n      editUrl: \"/editissuancehistory/\",\r\n      viewUrl: \"/viewissuancehistory/\",\r\n      addButtonUrl: '/adddissuancehistory',\r\n      url: '/payments'\r\n    }\r\n  }\r\n  var dealerData = [['1-a001', 'antonia,nilza', '', 'Yes', 'm'], ['1-a003', 'albert,shermine', '1964090414', 'No', 'm'], ['1-a006', 'antersyn,rignald', '1950320212', 'No', 'm'], ['1-a007', 'antonia,joiseline c', '1976032204', 'Yes', 'm']];\r\n  var merchantHeader = ['Code', 'Nomber', 'Bank', 'Rekening', 'In-Aktivo', 'Actions'];\r\n  var merchantData = [['sm005', 'mangusa rio', 'MCB', '13045206', 'Yes'], ['sm006', 'colon,supermarket', 'MCB', '17841503', 'Yes'], ['sm008', 'cost u alias', 'MCB', '14478301', 'Yes'], ['sm016', 'tony romas', 'Check', '', 'Yes']];\r\n  const [show, setShow] = useState(false);\r\n\r\n  const showSideBar = (value) => {\r\n    setShow(value);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {show && <SideBar />}\r\n      {/* <EditForm/> */}\r\n      {/* <Route exact path='/add'>\r\n        <Suspense fallback={<span>loader</span>}>\r\n          <Form />\r\n        </Suspense>\r\n      </Route> */}\r\n      {/* <landingPage /> */}\r\n      <Route exact path=\"/\" ><LoginForm showSidebar={showSideBar} /></Route>\r\n      <Route exact path=\"/login\" ><LoginForm showSidebar={showSideBar} /></Route>\r\n      <Route exact path=\"/register\" ><Register showSidebar={showSideBar} /></Route>\r\n      <Route exact path=\"/merchant\" >{<Home editUrl={'/editclient'} showSidebar={showSideBar} data={merchantData} header={merchantHeader} url={\"/addmerchant\"} title=\"Negoshi\" />}</Route>\r\n      <Route exact path='/dealer' component={(props) => <Home editUrl={'/editclient'} showSidebar={showSideBar} data={dealerData} header={dealerHeader} url=\"/adddealer\" title={'Rebenbedor'} {...props} />} />\r\n      <Route exact path='/client' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.client} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/nfccard' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.nfcCard} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/device' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.device} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/merchants' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.merchants} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/merchantType' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.merchantType} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/issuancehistory/:Client_id' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.issuanceHistory} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n      <Route exact path='/payments' component={(props) => <Home editUrl={\"/editclient/\"} viewUrl={\"/viewclient/\"} showSidebar={showSideBar} data={data.payments} header={clientHeader} url='/addclient' title={'Kliente'}  {...props} />} />\r\n\r\n      {/* <Route exact path=\"/addmerchant\" ><Form  showSidebar={showSideBar} url='/merchant' heading=\"Negoshi\"/></Route>\r\n      <Route exact path=\"/addclient\" ><Form editUrl={'/editClient'}  url='/client' heading=\"Kliente\"/></Route>\r\n      <Route exact path=\"/adddealer/:id\" ><Form editUrl={'/editDealer'}    url='/dealer' heading=\"Rebenbedor\"/></Route> */}\r\n      <Route exact path=\"/addclient\" ><Form url='/client' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/editclient\" ><EditForm editUrl={'/editMerchant'} url='/client' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/adddevice\" ><DeviceAddForm url='/device' heading=\"Device\" /></Route>\r\n      <Route exact path=\"/addnfccard\" ><AddNfcCard url='/nfccard' heading=\"NFC Card\" /></Route>\r\n      <Route exact path=\"/adddissuancehistory\">< AddIssuanceHistory url='/issuancehistory' heading=\"Issue Card\" /></Route>\r\n      <Route exact path=\"/editdevice/:id\" ><DeviceEditForm view={false} editUrl={'/editclient'} url='/device' heading=\"Device\" /></Route>\r\n      <Route exact path=\"/viewdevice/:id\" ><DeviceEditForm view={true} editUrl={'/editclient'} url='/device' heading=\"Device\" /></Route>\r\n      <Route exact path=\"/editissuancehistory/:id\" ><EditIssuanceHistory view={false} editUrl={'/editclient'} url='/issuancehistory' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/viewissuancehistory/:id\" ><EditIssuanceHistory view={true} editUrl={'/editclient'} url='/issuancehistory' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/editnfccard/:id\" ><EditNfcCard view={false} editUrl={'/editclient'} url='/nfccard' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/viewnfccard/:id\" ><EditNfcCard view={true} editUrl={'/editclient'} url='/nfccard' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/addmerchants\" ><MerchantsAdd url='/merchants' heading=\"Merchants\" /></Route>\r\n      <Route exact path=\"/addmerchantType\" ><MerchantTypeAdd url='/merchantType' heading=\"Merchants\" /></Route>\r\n\r\n      <Route exact path=\"/editmerchantType/:id\" ><MerchantTypeEdit url='/client' heading=\"Merchant Type\" /></Route>\r\n      <Route exact path=\"/editmerchants/:id\" ><MerchantsEdit view={false} editUrl={'/editmerchants'} url='/merchants' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/viewmerchants/:id\" ><MerchantsEdit view={true} editUrl={'/editmerchants'} url='/merchants' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/editclient/:id\" ><EditForm view={false} editUrl={'/editclient'} url='/client' heading=\"Kliente\" /></Route>\r\n      <Route exact path=\"/editdealer/:id\" ><EditForm editUrl={'/editDealer'} url='/dealer' heading=\"Rebenbedor\" /></Route>\r\n      <Route exact path=\"/viewclient/:id\" ><EditForm view={true} editUrl={'/editclient'} url='/client' heading=\"Kliente\" /></Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <BrowserRouter> <App /></BrowserRouter> \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}